#!/usr/bin/env ruby
require 'open3'

class DevTool
  MAIN_HELP_BANNER = <<HEREDOC
Execute various commands within the developer environment

Usage:
  dev [options] [COMMAND] [ARGS...]"
  dev -h|--help

Options:
  --verbose                 Show more output
  -v, --version             Print version and exit

Commands:
  build              Build or rebuild services
  help               Get help on a command
  kill               Kill containers
  logs               View output from containers
  ps                 List containers
  pull               Pulls service images
  restart            Restart services
  rm                 Remove stopped containers
  run                Run a one-off command
  start              Start services
  stop               Stop services
  up                 Create and start containers
  machine            Manage the virtual machine
  update             Update Dash developer environment
  dash               Manage Dash services (nginx and dnsmasq)

HEREDOC

  PROXY_UNMODIFIED_TO_COMPOSE=%w{build kill logs ps pull restart rm start stop}
  PROXY_MODIFIED=%w{up run}
  OTHER_COMMANDS=%w{machine update dash}

  def initialize(args)
    if PROXY_UNMODIFIED_TO_COMPOSE.include?(args[0])
      system(args.unshift("docker-compose").join(" "))
    elsif PROXY_MODIFIED.include?(args[0])
      send(args[0].to_sym, args)
    elsif OTHER_COMMANDS.include?(args[0])
      send(args.shift.to_sym, args)
    else
      puts MAIN_HELP_BANNER
    end
  end

  def update(args)
    system('cd ~/Documents/dev-env && git fetch && git reset --hard origin/master')
    system('ansible-playbook ~/Documents/dev-env/ansible/mac.yml -i ~/Documents/dev-env/hosts --ask-become-pass --verbose')
  end

end

DevTool.new(ARGV) if __FILE__==$0
